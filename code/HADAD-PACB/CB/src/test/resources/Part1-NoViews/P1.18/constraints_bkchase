name(id1,n1),name(id2,n1)->id2=id1;
tr(id1,idt1),tr(id1,idt2)->idt1=idt2;
in(id1,idt1),in(id1,idt2)->idt1=idt2;
ins(id1,idt1),ins(id1,idt2)->idt1=idt2;
in(id1,idr1),in(idr1,idr3)->id1=idr3;
#tr(id1,idr1),tr(idr1,idr3)->id1=idr3; important remove!
multi(idA,idB,idr1),multi(idA,idB,idr2)->idr2=idr1;
multi_s(idA,idB,idr1),multi_s(idA,idB,idr2)->idr2=idr1;
det(idA,d1),det(idA,d2)->d2=d1;
trace(idA,id1),trace(idA,id2)->id2=id1;
add(idA,idB,idr1),add(idA,idB,idr2)->idr1=idr2;
add_s(idA,idB,idr1),add_s(idA,idB,idr2)->idr1=idr2;
sum(id1,idt1),sum(id1,idt2)->idt2=idt1;
rowSums(idA,id1),rowSums(idA,id2)->id2=id1;
colSums(idA,id1),colSums(idA,id2)->id2=id1;

#---------------TRANS---------------------#
tr(idA,idr2),in(idr2,idr3)->in(idA,idr1),tr(idr1,idr3);
#name(id1,n)->tr(id1,idr1),tr(idr1,id1);
add(idA,idB,idr1),tr(idr1,idT)->tr(idA,idAT),tr(idB,idBT),add(idAT,idBT,idT);
#tr(idA,idAT),tr(idB,idBT),multi(idBT,idAT,idr2)->multi(idA,idB,idr1),tr(idr1,idr2);
multi(idA,idB,idr1),tr(idr1,idr2)->tr(idA,idAT),tr(idB,idBT),multi(idBT,idAT,idr2);


#---------------INV-----------------------#
in(idA,idr1),tr(idr1,idr3)->tr(idA,idr2),in(idr2,idr3);
#name(id1,n)->in(id1,idr1),in(idr1,id1);
multi(idA,idB,idr1),in(idr1,idr2)->in(idA,idAT),in(idB,idBT),multi(idBT,idAT,idr2);
multi(idA,idB,idr1),in(idr1,idr2)->in(idA,idAT),in(idB,idBT),multi(idBT,idAT,idr2);

#---------------ADD-----------------------#
add(idA,idB,idr1)->add(idB,idA,idr1);
add_s(idA,idB,idr1)->add_s(idB,idA,idr1);
add(idB,idC,idr1),multi(idA,idr1,idr2)->multi(idA,idB,idr3),multi(idA,idC,idr4),add(idr3,idr4,idr2);
add(idA,idB,idr3),multi_s(s1,idr3,t)->multi_s(s1,idA,idr1),multi_s(s1,idB,idr2),add(idr1,idr2,t);
#multi_s(s1,idA,idr1),multi_s(s1,idB,idr2),add(idr1,idr2,t)->add(idA,idB,idr3),multi_s(s1,idr3,t); if add this, the rw time will increase
add_s(s1,s2,idr3),multi(idr3,idA,t)->multi_s(s1,idA,idr1),multi_s(s2,idA,idr2),add(idr1,idr2,t);
#multi_s(s1,idA,idr1),multi_s(s2,idA,idr2),add(idr1,idr2,t)->add_s(s1,s2,idr3),multi(idr3,idA,t); if add this, the rw time will increase
 
#--------------MULTI----------------------#
multi(idA,idB,idr1),multi(idr1,idC,idr2)-> multi(idB,idC,idr3),multi(idA,idr3,idr2);

#-------------DET-------------------------#
det(idA,dA),det(idB,dB),multi_s(dA,dB,d)->multi(idA,idB,idr1),det(idr1,d);
in(idA,idI),det(idI,d)->det(idA,d1),ins(d1,d);
name(idA,n),det(idA,d)->tr(idA,idr1),det(idr1,d);
#multi(idA,idB,m),det(m,d)->tr(m,idr1),det(idr1,d);


#-------------TRACE-------------------------#
#name(idr1,n),trace(idr1,v)->tr(idr1,idT),trace(idT,v);
#add(idA,idB,idr1),trace(idr1,v)->tr(idr1,idT),trace(idT,v);
#multi(idA,idB,idr1),trace(idr1,v)->tr(idr1,idT),trace(idT,v);
#trace(idA,a1),trace(idB,a2),add_s(a1,a2,idr2)->add(idA,idB,idr1),trace(idr1,idr2);
add(idA,idB,idr1),trace(idr1,t)->trace(idA,r1),trace(idB,r2),add_s(r1,r2,t);

#------------SystemML Rules --------------#
tr(idA,idr1),rowSums(idr1,idr2)->colSums(idA,idr3),tr(idr3,idr2);
colSums(idA,idr3),tr(idr3,idr2)->tr(idA,idr1),rowSums(idr1,idr2);
name(idA,n),sum(idA,s)->rowSums(idA,idr2),sum(idr2,s);
name(idA,n),sum(idA,s)->colSums(idA,idr2),sum(idr2,s);

