name(id1,n1),name(id2,n1)->id2=id1;
tr(id1,idt1),tr(id1,idt2)->idt1=idt2;
in(id1,idt1),in(id1,idt2)->idt2=idt1;
ins(id1,idt1),ins(id1,idt2)->idt1=idt2;
tr(id1,idr1),tr(idr1,idr3)->id1=idr3;
in(id1,idr1),in(idr1,idr3)->id1=idr3;
multi(idA,idB,idr1),multi(idA,idB,idr2)->idr1=idr2;
multi_s(idA,idB,idr1),multi_s(idA,idB,idr2)->idr1=idr2;
det(idA,d1),det(idA,d2)->d2=d1;
trace(idA,id1),trace(idA,id2)->id2=id1;
add(idA,idB,idr1),add(idA,idB,idr2)->idr1=idr2;
div(idA,idB,r1),div(idA,idB,r2)->r1=r2;

one(I1),one(I2)->I2=I1;
zero(I1),zero(I2)->I2=I1;
colSums(idA,idr1),colSums(idA,idr2)->idr1=idr2;

#name(idA,n)-> one(I),div(idA,I,idA);
name(idA,n)-> div(idA,"1",idA);
name(idA,n)-> div("1",idA,idA);
name(idA,n)-> one(I),multi_s(idA,I,idA);
#name(idA,n)->zero(I),multi(idA,I,I);

add(idA,idB,idr1)-> one(I),div(idr1,I,idr1);
add(idA,idB,idr1)-> one(I),multi_s(idr1,I,idr1);

name(idA,n),size(idA,"1",j)->colSums(idA,idA);
name(idM,"M"),size(idM,"1","6")->zero(idM),size(idM,"1","6");
sum(idA,r1),sum(idA,r2)->r2=r1;
rowSums(idA,r1),rowSums(idA,r2)->r2=r1;
colSums(idA,r1),colSums(idA,r2)->r2=r1;
rowSums(idA,idR),sum(idR,r)-> sum(idA,r);
colSums(idA,idR),sum(idR,r)-> sum(idA,r);
rowSums(idA,idr1),tr(idr1,idr2)-> colSums(idA,idr3),tr(idr3,idr2);
colSums(idX,idr1),size(idX,j,"1") -> sum(idX,idr1);
zero(idA)->tr(idA,idA);



#simplifyTraceMatrixMult
multi(idA,idB, idr1), trace(idr1,r)-> tr(idB,idr2),multi_s(idA,idr2,idr3),sum(idr3,r);

#(X+Y*X) -> (1+Y)*X
add(idX,idY,idr1),multi_s(idr1,idX,idr2)-> one(I),size(I,i,j),add(I,idY,idr3),multi_s(idr3,idX,idr2);
add(idA,idB,idr1)->add(idB,idA,idr1);
