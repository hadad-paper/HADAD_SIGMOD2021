name(id1,n1),name(id2,n1)->id2=id1;
tr(id1,idt1),tr(id1,idt2)->idt2=idt1;
in(id1,idt1),in(id1,idt2)->idt2=idt1;
ins(id1,idt1),ins(id1,idt2)->idt2=idt1;
str(id1,idr1),tr(idr1,idr3)->idr3=id1;
in(id1,idr1),in(idr1,idr3)->idr3=id1;
multi(idA,idB,idr1),multi(idA,idB,idr2)->idr1=idr2;
multi_s(idA,idB,idr1),multi_s(idA,idB,idr2)->idr2=idr1;
det(idA,d1),det(idA,d2)->d2=d1;
trace(idA,id1),trace(idA,id2)->id2=id1;
add(idA,idB,idr1),add(idA,idB,idr2)->idr1=idr2;

#name(id1,n)->tr(id1,idr1),tr(idr1,id1);
#name(id1,n)->in(id1,idr1),in(idr1,id1);


#tr(idA,idr2),in(idr2,idr3)->in(idA,idr1),tr(idr1,idr3);
in(idA,idr1),tr(idr1,idr3)->tr(idA,idr2),in(idr2,idr3);

tr(idA,idAT),tr(idB,idBT),multi(idBT,idAT,idr2)->multi(idA,idB,idr1),tr(idr1,idr2);
in(idA,idAT),in(idB,idBT),multi(idBT,idAT,idr2)->multi(idA,idB,idr1),in(idr1,idr2);
tr(idA,idAT),tr(idB,idBT),add(idAT,idBT,idT)->add(idA,idB,idr1),tr(idr1,idT);


multi(idA,idB,idr3),multi(idA,idC,idr4),add(idr3,idr4,idr2)->add(idB,idC,idr1),multi(idA,idr1,idr2);

multi(idB,idC,idr3),multi(idA,idr3,idr2)->multi(idA,idB,idr1),multi(idr1,idC,idr2);
add(idB,idA,idr1)->add(idA,idB,idr1);
add_s(idB,idA,idr1)->add_s(idA,idB,idr1);

det(idA,dA),det(idB,dB),multi_s(dA,dB,d)->multi(idA,idB,idr1),det(idr1,d);
det(idA,d1),ins(d1,d)->in(idA,idI),det(idI,d);
trace(idA,idr3),trace(idB,idr4),add_s(idr3,idr4,idr2)->add(idA,idB,idr1),trace(idr1,idr2);
#name(idr1,n),det(idr1,v)->tr(idr1,idT),det(idT,v);
#multi(idA,idB,idr1),det(idr1,v)->tr(idr1,idT),det(idT,v);


name(idr1,"V1")->
name(idM,"M"),
name(idN,"N"),
in(idM,idT1),
in(idN,idT2),
multi(idT2,idT1,idr1);




#name(idr4,"V2")->
#in(idM,SK_0),in(idN,SK_1),multi(SK_1,SK_0,idr2),
#add_s(SK_3,SK_2,idr4),
#trace(idr2,SK_2),
#trace(idZ,SK_3),
#name(idM,"M"),
#name(idN,"N"),
#name(idZ,"Z");